<project default="default" basedir=".">
  <property environment="ENV"/>
  <property file="${basedir}/${user.name}.build.properties"/>
  <property file="${basedir}/build.properties"/>
  
  <path id="src.build.classpath">
    <pathelement location="${lib.dir}/commons-lang-2.4.jar"/>
  </path>
  
  <path id="tests.build.classpath">
    <path refid="src.build.classpath"/>
    <pathelement location="${src.build.output}"/>
    <pathelement location="${lib.dir}/junit-4.7.jar"/>
  </path>
  
  <target name="default" depends="all"/>
  
  <target name="all" depends="compile,test"
   description="Build all of Fudge without packaging for distribution"
   />
  
  <target name="compile" depends="compile-src,compile-test"
   description="Compile all source code"/>
  
  <target name="compile-src">
    <mkdir dir="${src.build.output}"/>
    <javac
     srcdir="${basedir}/src"
     destdir="${src.build.output}"
     debug="${build.debug}"
     optimize="${build.optimize}"
     verbose="${build.verbose}"
     listfiles="${build.listfiles}"
     classpathref="src.build.classpath"
     />
    <copy todir="${src.build.output}">
      <fileset dir="${basedir}/src">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <target name="compile-test">
    <mkdir dir="${tests.build.output}"/>
    <javac
     srcdir="${basedir}/tests/unit"
     destdir="${tests.build.output}"
     debug="${build.debug}"
     optimize="${build.optimize}"
     verbose="${build.verbose}"
     listfiles="${build.listfiles}"
     classpathref="tests.build.classpath"
     />
    <copy todir="${tests.build.output}">
      <fileset dir="${basedir}/tests/unit">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean"
   description="Remove all files created as part of any build process.">
    <delete dir="${src.build.output}" failonerror="false" quiet="true"/>
    <delete dir="${tests.build.output}" failonerror="false" quiet="true"/>
    <delete dir="${tests.junit.output}" failonerror="false" quiet="true"/>
    <delete dir="${dist.dir}" failonerror="false" quiet="true"/>
  </target>
  
  <target name="test" depends="compile,junit-report"
   description="Execute all automated tests and produce XML/HTML reports"/>
   
  <target name="junit-batch">
    <mkdir dir="${tests.junit.output}/xml"/>
    <junit
     printSummary="true"
     fork="true"
     forkmode="once"
     >
      <classpath>
        <path refid="tests.build.classpath"/>
        <pathelement location="${tests.build.output}"/>
      </classpath>
      <assertions><enable/></assertions>
      <formatter type="xml"/>
      <batchtest todir="${tests.junit.output}/xml">
        <fileset dir="${basedir}/tests/unit" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>
  
  <target name="junit-report" depends="junit-batch">
    <mkdir dir="${tests.junit.output}/html"/>
    <junitreport todir="${tests.junit.output}/xml">
      <fileset dir="${tests.junit.output}/xml" includes="TEST-*.xml"/>
      <report todir="${tests.junit.output}/html"/>
    </junitreport>
  </target>
  
  <target name="package" depends="tarball,zipfile"
    description="Generate the distribution packages.">
  </target>
  
  <target name="bin-jar" depends="compile-src">
    <mkdir dir="${dist.dir}/fudge-${fudge.version}"/>
    <jar destfile="${dist.dir}/fudge-${fudge.version}/fudge-${fudge.version}.jar"
      basedir="${src.build.output}"
      compress="${jar.compress}">
    </jar>
  </target>
  
  <target name="src-jar">
    <mkdir dir="${dist.dir}/fudge-${fudge.version}"/>
    <jar destfile="${dist.dir}/fudge-${fudge.version}/fudge-${fudge.version}-src.jar"
      basedir="${basedir}/src"
      compress="${jar.compress}">
    </jar>
  </target>
  
  <target name="prep-dist-dir" depends="bin-jar,src-jar">
    <mkdir dir="${dist.dir}/fudge-${fudge.version}/lib"/>
    <copy todir="${dist.dir}/fudge-${fudge.version}/lib">
      <fileset dir="${lib.dir}">
        <include name="commons-lang-2.7.jar"/>
        <include name="junit-4.7.jar"/>
      </fileset>
    </copy>
  </target>
  
  <target name="tarball" depends="prep-dist-dir">
    <tar destfile="${dist.dir}/fudge-${fudge.version}.tar" basedir="${dist.dir}/fudge-${fudge.version}"/>
    <bzip2 src="${dist.dir}/fudge-${fudge.version}.tar" destfile="${dist.dir}/fudge-${fudge.version}.tar.bz2"/>
  </target>
  
  <target name="zipfile" depends="prep-dist-dir">
    <zip destfile="${dist.dir}/fudge-${fudge.version}.zip" basedir="${dist.dir}/fudge-${fudge.version}"/>
  </target>
  
</project>
